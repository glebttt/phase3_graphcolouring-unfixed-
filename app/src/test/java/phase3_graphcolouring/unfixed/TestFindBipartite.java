/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package phase3_graphcolouring.unfixed;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;
import static phase3_graphcolouring.unfixed.FindBipartite.isBipartite;

class TestFindBipartite
{
    @Test void simple() {
        ArrayList<ArrayList<Integer>> graph = new ArrayList<>(10);
        for(int i = 0; i<10; i++)
        {
            graph.add(new ArrayList<>(2));
        }



        graph.get(0).add(1);
        graph.get(0).add(2);
        graph.get(1).add(2);
        graph.get(1).add(3);
        graph.get(2).add(2);
        graph.get(2).add(4);
        graph.get(3).add(1);
        graph.get(3).add(5);
        graph.get(4).add(5);
        graph.get(4).add(6);
        graph.get(5).add(1);
        graph.get(5).add(7);
        graph.get(6).add(1);
        graph.get(6).add(4);

        ArrayList<Integer> graphAsList = new ArrayList<Integer>();
        for (int i = 1; i<=10; i++)
        {
            graphAsList.add(i);
        }

        assertTrue(isBipartite(graph, graphAsList));

    }
    /*
        //Circular
        graph.get(0).add(1);
        graph.get(0).add(2);
        graph.get(1).add(2);
        graph.get(1).add(3);
        graph.get(2).add(3);
        graph.get(2).add(4);
        graph.get(3).add(4);
        graph.get(3).add(5);
        graph.get(4).add(5);
        graph.get(4).add(6);
        graph.get(5).add(6);
        graph.get(5).add(7);
        graph.get(6).add(7);
        graph.get(6).add(8);
        graph.get(7).add(8);
        graph.get(7).add(9);
        graph.get(8).add(9);
        graph.get(8).add(10);
        graph.get(9).add(10);
        graph.get(9).add(1);

        //app.src.main.java.phase3_graphcolouring.unfixed.Tree
        /*graph.get(0).add(1);
        graph.get(0).add(2);
        graph.get(1).add(1);
        graph.get(1).add(4);
        graph.get(2).add(1);
        graph.get(2).add(8);
        graph.get(3).add(6);
        graph.get(3).add(4);
        graph.get(4).add(2);
        graph.get(4).add(3);
        graph.get(5).add(6);
        graph.get(5).add(7);
        graph.get(6).add(6);
        graph.get(6).add(5);*/

    //Tree
       /* graph.get(0).add(1);
        graph.get(0).add(2);
        graph.get(1).add(1);
        graph.get(1).add(3);
        graph.get(2).add(1);
        graph.get(2).add(4);
        graph.get(3).add(2);
        graph.get(3).add(5);
        graph.get(4).add(2);
        graph.get(4).add(6);
        graph.get(5).add(2);
        graph.get(5).add(7);
        graph.get(6).add(6);
        graph.get(6).add(10);
        graph.get(7).add(6);
        graph.get(7).add(11);
        graph.get(8).add(6);
        graph.get(8).add(12);
        graph.get(9).add(4);
        graph.get(9).add(8);
        graph.get(10).add(4);
        graph.get(10).add(9);
        graph.get(11).add(8);
        graph.get(11).add(13);
        graph.get(12).add(8);
        graph.get(12).add(14);*/

    //Star
        /*for (int i = 0; i<8; i++){
            graph.get(i).add(2);
        }
        graph.get(0).add(1);
        graph.get(1).add(3);
        graph.get(2).add(4);
        graph.get(3).add(5);
        graph.get(4).add(6);
        graph.get(5).add(7);
        graph.get(6).add(8);
        graph.get(7).add(9);*/

    //Tree
        /*graph.get(0).add(1);
        graph.get(0).add(2);
        graph.get(1).add(1);
        graph.get(1).add(3);
        graph.get(2).add(3);
        graph.get(2).add(9);
        graph.get(3).add(3);
        graph.get(3).add(12);
        graph.get(4).add(3);
        graph.get(4).add(11);
        graph.get(5).add(4);
        graph.get(5).add(2);
        graph.get(6).add(4);
        graph.get(6).add(5);
        graph.get(7).add(4);
        graph.get(7).add(6);
        graph.get(8).add(6);
        graph.get(8).add(8);
        graph.get(9).add(5);
        graph.get(9).add(7);
        graph.get(10).add(9);
        graph.get(10).add(10);
        graph.get(11).add(10);
        graph.get(11).add(13);
        graph.get(12).add(10);
        graph.get(12).add(14);
        graph.get(13).add(10);
        graph.get(13).add(15);
*/
}
